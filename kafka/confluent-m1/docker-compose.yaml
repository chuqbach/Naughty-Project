version: "3.8"

services:

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafka

  broker:
    image: docker.io/bitnami/kafka:3.2
    hostname: broker
    container_name: broker
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=INTERNAL://broker:9090,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://broker:9090,EXTERNAL://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
    depends_on:
      - zookeeper
    networks:
      - kafka

  schema-registry:
    image: confluentinc/cp-schema-registry:4.1.1
    container_name: schema-registry
    hostname: schema-registry
    ports:
    - "8081:8081"
    depends_on:
    - broker
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://broker:9090"
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
      SCHEMA_REGISTRY_DEBUG: "true"
    networks:
      - kafka

  kafka-rest:
    image: confluentinc/cp-kafka-rest:4.1.1
    container_name: kafka-rest
    hostname: kafka-rest
    ports:
    - "8082:8082"
    depends_on:
      - schema-registry
    environment:
      KAFKA_REST_BOOTSTRAP_SERVERS: "broker:9090"
      KAFKA_REST_SCHEMA_REGISTRY_URL: schema-registry:8081
      KAFKA_REST_HOST_NAME: kafka-rest
      KAFKA_REST_LISTENERS: http://kafka-rest:8082
    networks:
      - kafka

  debezium-connect:
    image: debezium/connect:1.9
    container_name: debezium-connect
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: broker:9090
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: deb_connect_configs
      OFFSET_STORAGE_TOPIC: deb_connect_offsets
      KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    depends_on:
      - broker
    networks:
      - kafka


volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local

networks:
  kafka:
    driver: bridge

